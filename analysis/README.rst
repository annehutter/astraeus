ANALYSIS FOR ASTRAEUS
=====================

Analysis code for the semi-analytical / semi-numerical galaxy evolution and reionization code ASTRAEUS (semi-numerical rAdiative tranSfer coupling of galaxy formaTion and Reionization in n-body dArk mattEr simUlationS)

This code is to analyse the tree output files generated by ``ASTRAEUS``.

Installation
============

Pre-requisities
---------------

Parallel run
````````````

1. MPI library


Download & Build
----------------

The source code of this ``ASTRAEUS`` analysis program is downloaded when cloning the `ASTRAEUS repository <https://github.com/annehutter/astraeus>`__:
::

    $ git clone https://github.com/annehutter/astraeus.git
    $ cd analysis
    $ make

This will download the code and a test case from the github directory and compile the source code.

Execution
---------

The analysis can then be run by
::

    $ ./analyse iniFile.ini

``iniFile.ini`` contains the input parameters that are needed for any analysis run. For a different analysis run the code does not need to be recompiled but only the parameter file iniFile.ini to be adapted.

Parameter File
==============

**[Input]**

- ``numFiles`` = *[integer]* number of input tree files
- ``inputFile`` = path to ``ATSRAEUS`` output tree files; note the code assumes all the trees have the same name and differ just by their suffix ``_i``
- ``boxsize`` =  *[float]* length of the simulation box in h^-1 Mpc
- ``gridsize`` = *[integer]* gridsize of the density fields

**[Cosmology]**

- ``omega_m`` = *[float]* matter density parameter
- ``omega_b`` = *[float]* baryon density parameter
- ``omega_l`` = *[float]* lambda density parameter
- ``hubble_h`` = *[float]* Hubble constant H = 100*h km/s/Mpc

**[Grid]**

- ``ionFilename`` = path to ionization field (note the code adds automatically the required suffix that contains the snapshot ``_00i``)
- ``densFilename`` = path to the DM/gas density field (note the code adds automatically the required suffix that contains the snapshot ``_00i``)
- ``ionInputInDoublePrecision`` = *[integer]* identifier whether the ionization field is in single [value: 0] or double [value: 1] precision
- ``densInputInDoublePrecision`` = *[integer]* identifier whether the DM/gas density field is in single [value: 0] or double [value: 1] precision
- ``memoryIntensive`` = *[integer]* identifier whether a memory [value: 1] or a communication [value: 0] intensive method should be used to get grid properties of galaxies

**[Analysis]**

- ``numOutputRedshifts`` = *[integer]* number of redshifts for which analysis should be done
- ``outputRedshifts`` = *[list of floats]* redshifts at which analysis should be run [example: 10. 9. 8. 7. 6. 5.]

**[2dHistogram]** *This option computes the history (time evolution) of a galaxy property as a function of two chosen galaxy properties (hereafter: binned properties)*

- ``num_2D_history`` = *[integer]* number of 2D histograms to compute or the length of the lists below
- ``property_2D_history`` = *[list of properties]* property whose redshift evolution (history) should be obtained; possible options: Mvir, MgasIni, Mgas, fg, Mstar, SFR, photHI_bg, zreion, DENS, ION
- ``binProperty1_2D_history`` = *[list of properties]* first binned property across which to bin property
- ``binProperty2_2D_history`` = *[list of properties]* second binned property across which to bin property
- ``binsInLog1_2D_history`` = *[list of integers]* identifier whether binning of the first binned property is logarithmic [value: 1] or linear [value: 0]
- ``binsInLog2_2D_history`` = *[list of integers]* identifier whether binning of the second binned property is logarithmic [value: 1] or linear [value: 0]
- ``binsPerMag1_2D_history`` = *[list of integers]* number of bins per magnitude when binning the first binned property
- ``binsPerMag2_2D_history`` = *[list of integers]* number of bins per magnitude when binning the second binned property

**[1dHistogram]** *This option computes the history (time evolution) of a galaxy property as a function of one chosen galaxy property (hereafter: binned property)*

- ``num_1D_history`` = *[integer]* number of 1D histograms to compute or the length of the lists below
- ``property_1D_history`` = *[list of properties]* property whose redshift evolution (history) should be obtained; possible options: Mvir, MgasIni, Mgas, fg, Mstar, SFR, photHI_bg, zreion, DENS, ION
- ``binProperty_1D_history`` = *[list of properties]* binned property across which to bin property
- ``binsInLog_1D_history`` = *[list of integers]* identifier whether binning of the binned property is logarithmic [value: 1] or linear [value: 0]
- ``binsPerMag_1D_history`` = *[list of integers]* number of bins per magnitude when binning the binned property

**[2dnumDensHistogram]** *This option computes the number density of galaxies as a function of two chosen galaxy properties (hereafter: binned properties)*

- ``num_2D`` = *[integer]* number of 2D number density histograms to compute or the length of the lists below
- ``binProperty1_2D`` = *[list of properties]* first binned property across which to bin property
- ``binProperty2_2D`` = *[list of properties]* second binned property across which to bin property
- ``binsInLog1_2D`` = *[list of integers]* identifier whether binning of the first binned  property is logarithmic [value: 1] or linear [value: 0]
- ``binsInLog2_2D`` = *[list of integers]* identifier whether binning of the second binned property is logarithmic [value: 1] or linear [value: 0]
- ``binsPerMag1_2D`` = *[list of integers]* number of bins per magnitude when binning the first binned property
- ``binsPerMag2_2D`` = *[list of integers]* number of bins per magnitude when binning the second binned property

**[1dnumDensHistogram]** *This option computes the number density of galaxies as a function of one chosen galaxy properties (hereafter: binned property)*

- ``num_1D`` = *[integer]* number of 1D  number density histograms to compute or the length of the lists below
- ``binProperty_1D`` = *[list of properties]* binned property across which to bin property
- ``binsInLog_1D`` = *[list of integers]* identifier whether binning of the binned property is logarithmic [value: 1] or linear [value: 0]
- ``binsPerMag_1D`` = *[list of integers]* number of bins per magnitude when binning the binned property
- ``cumulative`` = *[list of integers]* identifier whether 1D histogram should be cumulative

**[AnalysisEvolution]** *This option can be enabled to generate the history (time evolution) of a galaxy property as a function of one chosen galaxy property (herafter: binned property). This analysis seems similar to 1dHistogramm, however instead of following the total history of each galaxy at the chosen snapshot (i.e. summing the properties of all progenitors if a galaxy has multiple progenitors), this option reads in galaxies at all snapshots and derives histories*

- ``trackEvolution`` = *[integer]* identifier whether history across all available snapshots should be calculated [value: 1] or not [value: 0]

**[1dHistogramEvolution]** *This part is only relevant when ``trackEvolution=1``*

- ``num_1D_evolution`` = *[integer]* number of number density histograms to compute or the length of the lists below
- ``property_1D_evolution`` = *[list of properties]* property whose redshift evolution (history) should be obtained; possible options: Mvir, MgasIni, Mgas, fg, Mstar, SFR, photHI_bg, zreion, DENS, ION
- ``binProperty_1D_evolution`` = *[list of properties]* binned property across which to bin property
- ``binsInLog_1D_evolution`` = *[list of integers]* identifier whether binning of the binned property is logarithmic [value: 1] or linear [value: 0]
- ``binsPerMag_1D_evolution`` = *[list of integers]* number of bins per magnitude when binning the binned property
- ``binsMinValue_1D_evolution`` = *[double]* minimum value of the binning binned property
- ``binsMaxValue_1D_evolution`` = *[double]* maximum value of hte binning binned property

**[Output]**

- ``outputDirectory`` = path for directory where output files are to be written
